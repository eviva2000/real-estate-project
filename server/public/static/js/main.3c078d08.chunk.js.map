{"version":3,"sources":["assets/logo2.png","assets/unisexavatar.png","components/Nav.js","sections/LandingPage.js","sections/Login.js","sections/Signup.js","sections/Profile.js","sections/Inventory.js","components/ProtectedRout.js","sections/HomeProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","userData","isAuth","onAuth","console","log","handleLogout","a","localStorage","removeItem","axios","get","className","id","src","Logo","alt","firstname","to","onClick","LandingPage","useState","searchResultDisplay","setSearchResultDisplay","addresses","setAddresses","searchByCity","options","crossDomain","method","headers","fetch","fetchCity","json","result","type","name","placeholder","onFocus","onInput","onBlur","style","display","map","address","key","_id","city","postalcode","Login","errorMessage","setErrorMessage","useForm","register","handleSubmit","errors","history","useHistory","from","useLocation","state","pathname","getItem","push","loginHandler","formData","credentials","body","JSON","stringify","Accept","res","data","response","setItem","message","color","onSubmit","ref","required","pattern","value","email","password","href","Signup","signupHandler","minLength","lastname","repeatPassword","Profile","Avatar","listStyle","Inventory","API_KEY","process","API_URL","homes","setHomes","useEffect","api_call","fetchAllHomes","homeLink","home","width","height","backgroundImage","image","backgroundPosition","backgroundSize","justifyContent","alignItems","padding","price","beds","bath","area","paddingLeft","street","defaults","withCredentials","PrivateRoute","Component","component","auth","rest","userStatus","render","location","HomeProfile","setHome","homeId","useParams","url","api_cal","fetchHome","gridRow","border","description","marginLeft","backgroundColor","frameBorder","allowFullScreen","title","App","setAuth","parse","setUserData","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3c078d08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.15243493.png\";","module.exports = __webpack_public_path__ + \"static/media/unisexavatar.9d8150a8.png\";","import React from \"react\";\nimport Logo from \"../assets/logo2.png\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst Nav = (props) => {\n  const { userData, isAuth, onAuth } = props;\n  console.log(\"user data ...\", userData);\n  const handleLogout = async () => {\n    localStorage.removeItem(\"user\");\n    onAuth(false);\n    try {\n      await axios.get(\n        \"http://ec2-54-172-55-44.compute-1.amazonaws.com/users/logout\"\n      );\n      return;\n    } catch (err) {\n      return;\n    }\n  };\n  return (\n    <div className=\"Nav\">\n      <div id=\"imgContainer\">\n        <img src={Logo} alt=\"logo\" />\n        {isAuth ? <p>Hi {userData.firstname} </p> : null}\n      </div>\n      {isAuth ? (\n        <ul>\n          <Link to=\"/inventory\">Inventory</Link>\n          <Link to=\"/profile\">Profile</Link>\n          <button id=\"logout\" onClick={handleLogout}>\n            Log out\n          </button>\n        </ul>\n      ) : (\n        <ul>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/inventory\">Inventory</Link>\n          <div id=\"signInUpContainer\">\n            <div className=\"signInUp\" id=\"signin\">\n              <Link to=\"/login\">Login</Link>\n            </div>\n            <div className=\"signInUp\" id=\"signup\">\n              <Link to=\"/signup\">Signup</Link>\n            </div>\n          </div>\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\nconst LandingPage = () => {\n  const [searchResultDisplay, setSearchResultDisplay] = useState(\"none\");\n  const [addresses, setAddresses] = useState([]);\n  const showSearchResults = () => {\n    setSearchResultDisplay(\"block\");\n  };\n  const hideSearchResults = () => {\n    setSearchResultDisplay(\"none\");\n  };\n  // let serachQuery;\n  const API_URL =\n    'https://realestate-da8f.restdb.io/rest/addresses?q={\"city\":\"Odense\"}';\n  const API_KEY = \"5ed0af472032862ff2ce2612\";\n  const searchByCity = async () => {\n    const options = {\n      crossDomain: true,\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"x-apikey\": API_KEY,\n        \"cache-control\": \"no-cache\",\n      },\n    };\n    const fetchCity = await fetch(API_URL, options);\n    let result = await fetchCity.json();\n    console.log(result);\n    setAddresses(result);\n    showSearchResults();\n  };\n\n  return (\n    <div id=\"landingPage\">\n      <div className=\"searchContainer\">\n        <h2>Looking for your dream house?</h2>\n        <div>\n          <i className=\"fas fa-search\"></i>\n          <input\n            type=\"text\"\n            name=\"\"\n            id=\"searchInput\"\n            placeholder=\"Search by City or Postal code\"\n            onFocus={searchByCity}\n            onInput={searchByCity}\n            onBlur={hideSearchResults}\n          />\n          <div id=\"searchResult\" style={{ display: searchResultDisplay }}>\n            {addresses.map((address) => {\n              return (\n                <div id=\"searchItem\" key={address._id}>\n                  <p>\n                    {address.city} - Postal code:{address.postalcode}\n                  </p>\n                </div>\n              );\n            })}\n            {/* {#each ajUsers as jUser} */}\n            {/* <div id=\"searchItem\">\n              <div style={{ width: \"100%\", padding: \".5em\" }}>\n                city\n                {/* {jUser.firstname} {jUser.lastname} */}\n            {/* </div>\n            </div> */}\n            {/* {/each} */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\"; //form validation library\nconst Login = (props) => {\n  const [errorMessage, setErrorMessage] = useState();\n  const { onAuth, userData } = props;\n  const { register, handleSubmit, errors } = useForm();\n  let history = useHistory();\n  let location = useLocation();\n\n  let { from } = location.state || { from: { pathname: \"/profile\" } };\n\n  if (localStorage.getItem(\"user\")) {\n    history.push(\"/profile\");\n  }\n  const loginHandler = async (formData) => {\n    const options = {\n      method: \"POST\",\n      credentials: \"include\",\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const res = await fetch(\n      \"http://ec2-54-172-55-44.compute-1.amazonaws.com/users/login\",\n      options\n    );\n    const data = await res.json();\n    console.log(\"response in login....\", data.response);\n\n    onAuth(true);\n    userData(data.response);\n    localStorage.setItem(\"user\", JSON.stringify(data.response));\n\n    // push to the page you came from to login\n    console.log(\"from here...\", from);\n    history.push(from);\n    setErrorMessage(data.message);\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <section className=\"formImage\"></section>\n      <div className=\"loginForm\">\n        {\" \"}\n        {errorMessage ? (\n          <div style={{ color: \"#bb0000\" }}>{errorMessage}</div>\n        ) : (\n          \"\"\n        )}\n        <h3>Login</h3>\n        <form onSubmit={handleSubmit(loginHandler)}>\n          <div>\n            <i className=\"far fa-envelope icon\"></i>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              ref={register({\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                },\n              })}\n            />\n            {errors.email && <small>* Invalid email address </small>}\n          </div>\n          <div>\n            <i className=\"fa fa-lock icon\"></i>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              ref={register({\n                required: true,\n                pattern: {\n                  value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n                },\n              })}\n            />\n            {errors.password && (\n              <small>* Minimum 5 alpha numberic charecters </small>\n            )}\n          </div>\n          <div id=\"btnLinksContainer\">\n            <button className=\"submitButton\">Login</button>\n            <div className=\"links\">\n              <div>\n                <a href=\"/\">Forgot password?</a>\n              </div>\n              <div>\n                <Link to=\"/signup\">Don't have an account?</Link>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nconst Signup = (props) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  let history = useHistory();\n\n  const signupHandler = async (formData) => {\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const res = await fetch(\n      \"http://ec2-54-172-55-44.compute-1.amazonaws.com/users/signup\",\n      options\n    );\n    const data = await res.json();\n    console.log(\"response....\", data);\n    setErrorMessage(data.message);\n    history.push(\"/login\");\n  };\n  return (\n    <div className=\"formContainer\">\n      <section className=\"formImage\"></section>\n      <div className=\"registerForm\">\n        <h2>Welcome to Dream House</h2>\n        {errorMessage ? (\n          <div style={{ color: \"#bb0000\" }}>{errorMessage}</div>\n        ) : (\n          \"\"\n        )}\n        <form onSubmit={handleSubmit(signupHandler)}>\n          <div className=\"nameWrapper\">\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              placeholder=\"First name\"\n              ref={register({\n                required:\n                  \"* First name must be minimum 2 alphabetical charecters\",\n                minLength: 2,\n                pattern: { value: /^[a-zA-Z\\s]+$/ },\n              })}\n            />\n            {errors.name && (\n              <small className=\"err-msg\">{errors.name.message}</small>\n            )}\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              placeholder=\"Last name\"\n              ref={register({\n                required:\n                  \"* Last name must be minimum 2 alphabetical charecters\",\n                minLength: 2,\n                pattern: { value: /^[a-zA-Z\\s]+$/ },\n              })}\n            />\n            {errors.lastname && (\n              <small className=\"err-msg\">\n                Last name must be minimum 2 charecter{\" \"}\n              </small>\n            )}\n          </div>\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n              },\n            })}\n          />\n          {errors.email && <small>* Invalid email address </small>}\n\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n              },\n            })}\n          />\n          {errors.password && (\n            <small>* Minimum 5 alpha numberic charecters </small>\n          )}\n          <input\n            type=\"password\"\n            name=\"repeatPassword\"\n            placeholder=\"Repeat Password\"\n            ref={register({\n              required: true,\n              pattern: {\n                value: /^(?=.*\\d)(?=.*[a-zA-Z]).{5,}$/,\n              },\n            })}\n          />\n          {errors.repeatPassword && (\n            <small>* Minimum 5 alpha numberic charecters </small>\n          )}\n\n          <button className=\"submitButton\">Signup</button>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default Signup;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../assets/unisexavatar.png\";\nconst Profile = (props) => {\n  const { userData } = props;\n  // console.log(loggedUserInfo.username);\n  return (\n    <div className=\"profileContainer\">\n      <div className=\"imgWrapper\">\n        <img src={Avatar} id=\"avatar\" alt=\"\" />\n      </div>\n      <div className=\"userInfo\">\n        <p>\n          <span> Email Address:</span>\n          <div>\n            <input\n              className=\"profileInput\"\n              type=\"text\"\n              value={userData.email}\n            />\n          </div>\n        </p>\n        <p>\n          <span> Full name: </span>\n          <div className=\"profileInput\" id=\"fullName\">\n            <input type=\"text\" name=\"\" id=\"\" value={userData.firstname} />\n            <input type=\"text\" name=\"\" id=\"\" value={userData.lastname} />\n          </div>\n        </p>\n\n        <div className=\"resetBtn\">\n          {\" \"}\n          <li style={{ listStyle: \"none\" }}>\n            {\" \"}\n            <Link to=\"resetpassword\">Change password</Link>{\" \"}\n          </li>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Inventory = (props) => {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const API_URL = \"https://realestate-da8f.restdb.io/rest/addresses\";\n  console.log(API_KEY);\n  const [homes, setHomes] = useState([]);\n  useEffect(() => {\n    async function fetchAllHomes() {\n      const options = {\n        crossDomain: true,\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-apikey\": API_KEY,\n          \"cache-control\": \"no-cache\",\n        },\n      };\n      const api_call = await fetch(API_URL, options);\n      const response = await api_call.json();\n      console.log(response);\n      setHomes(response);\n    }\n    fetchAllHomes();\n  }, [API_KEY]);\n\n  // console.log(API_KEY);\n  let homeLink = homes.map((home) => {\n    return (\n      <Link key={home._id} to={`/inventory/${home._id}`}>\n        <div id=\"home\">\n          <div\n            style={{\n              width: \"100%\",\n              height: \"25vh\",\n              backgroundImage: `url(https://realestate-da8f.restdb.io/media/${home.image})`, //`url(${imageUrl})`\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n            }}\n          ></div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"0 1em\",\n            }}\n          >\n            <h3>{home.price}DKK</h3>\n            <p>\n              {home.beds} | {home.bath} | {home.area}sqm\n            </p>\n          </div>\n          <div style={{ paddingLeft: \"1em\" }}>\n            {\" \"}\n            {home.city} | {home.street} | {home.postalcode}\n          </div>\n        </div>\n      </Link>\n    );\n  });\n\n  return (\n    <div id=\"homeContainer\">\n      {\" \"}\n      {homeLink ? homeLink : <h2>Loading ....</h2>}{\" \"}\n    </div>\n  );\n};\nexport default Inventory;\n","import React, { useEffect } from \"react\";\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  const history = useHistory();\n\n  // check if the user is already logged in\n  useEffect(() => {\n    const userStatus = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:9090/users/session\");\n        const data = response.data;\n        console.log(data.data);\n        localStorage.setItem(\"user\", JSON.stringify(data.data));\n      } catch (err) {\n        localStorage.removeItem(\"user\");\n        return;\n      }\n    };\n\n    userStatus();\n  }, [history]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth === true || localStorage.getItem(\"user\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst HomeProfile = () => {\n  const [home, setHome] = useState([]);\n  const { homeId } = useParams();\n  const API_URL = \"https://realestate-da8f.restdb.io/rest/addresses\";\n  const API_KEY = \"5ed0af472032862ff2ce2612\";\n  useEffect(() => {\n    async function fetchHome() {\n      const url = `${API_URL}/${homeId}`;\n      const api_cal = await fetch(url, {\n        crossDomain: true,\n        method: \"GET\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-apikey\": API_KEY,\n          \"cache-control\": \"no-cache\",\n        },\n      });\n      const response = await api_cal.json();\n      setHome(response);\n      console.log(response);\n    }\n    fetchHome(); // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {home ? (\n        <div id=\"homeProfileContainer\">\n          <div id=\"imageWrapper\">\n            <div\n              style={{\n                width: \"100%\",\n                backgroundImage: `url(https://realestate-da8f.restdb.io/media/${home.image})`, //`url(${imageUrl})`\n                backgroundPosition: \"center\",\n                backgroundSize: \"cover\",\n                gridRow: \"1 / 5\",\n              }}\n            ></div>\n            <div id=\"takeTour\">\n              {\" \"}\n              Interested in this property?\n              <div\n                className=\"btn\"\n                style={{\n                  border: \"rgb(167, 166, 171) 1px solid\",\n                }}\n              >\n                Take a tour\n              </div>\n            </div>\n          </div>\n          <div id=\"homeInfo\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                padding: \"0 1em\",\n              }}\n            >\n              <h3>{home.price}DKK</h3>\n              <div style={{ paddingLeft: \"1em\" }}>\n                {\" \"}\n                {home.beds}bd | {home.bath}ba | {home.area}sqm\n              </div>\n            </div>\n            <div style={{ paddingLeft: \"1em\" }}>\n              {\" \"}\n              {home.city} | {home.street} | {home.postalcode}\n            </div>\n            <div id=\"description\">\n              <div></div>\n              <p>{home.description}</p>\n            </div>\n            <div id=\"btns\">\n              <div\n                className=\"btn\"\n                style={{\n                  border: \"#e8505b 1px solid\",\n                  color: \"#e8505b\",\n                }}\n              >\n                Take a tour\n              </div>\n              <div\n                className=\"btn\"\n                style={{\n                  marginLeft: \"1em\",\n                  backgroundColor: \"#e8505b\",\n                  color: \"white\",\n                }}\n              >\n                Contact agent\n              </div>\n            </div>\n            <hr />\n            <div>\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3002.6133721334145!2d-73.14261198505395!3d41.18659927928308!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89e80c540ed85383%3A0x1f19914bf8341e26!2s1574+Stratford+Ave%2C+Stratford%2C+CT+06615%2C+USA!5e0!3m2!1sen!2sdk!4v1559070448677!5m2!1sen!2sdk\"\n                width=\"100%\"\n                height=\"300\"\n                frameBorder=\"0\"\n                allowFullScreen\n                title=\"AdressMap\"\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading....</h2>\n      )}\n    </>\n  );\n};\nexport default HomeProfile;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport NavBar from \"./components/Nav\";\nimport LandingPage from \"./sections/LandingPage\";\nimport Login from \"./sections/Login\";\nimport Signup from \"./sections/Signup\";\nimport Profile from \"./sections/Profile\";\nimport Inventory from \"./sections/Inventory\";\nimport PrivateRoute from \"./components/ProtectedRout\";\nimport HomeProfile from \"./sections/HomeProfile\";\nimport \"./App.css\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const [auth, setAuth] = useState(localStorage.getItem(\"user\") ? true : false);\n\n  const [userData, setUserData] = useState(\n    localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : \"\"\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar\n          userData={userData}\n          isAuth={auth}\n          onAuth={(data) => setAuth(data)}\n        />\n\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route\n            exact\n            path=\"/login\"\n            component={(props) => (\n              <Login\n                {...props}\n                onAuth={(data) => setAuth(data)}\n                userData={setUserData}\n              />\n            )}\n          ></Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>{\" \"}\n          <PrivateRoute\n            auth={auth}\n            exact\n            path=\"/profile\"\n            component={(props) => <Profile userData={userData} {...props} />}\n          />\n          <PrivateRoute\n            auth={auth}\n            exact\n            path=\"/inventory\"\n            component={(props) => <Inventory {...props} />}\n          />\n          <PrivateRoute\n            exact\n            path=\"/inventory/:homeId\"\n            component={HomeProfile}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}